import java.io.*;
import com.datamelt.db.Rule;
import com.datamelt.db.RuleSubgroup;
import com.datamelt.util.PDITransformation;

writeaction="true";
if(user==null)
{
	templatename="login.vm";
}
else
{

	Project project = new Project();
	project.connection = connection;
	project.id = Long.parseLong(request.getParameter("projectid"));;
	project.load();
	context.put("project",project);
	
	rulegroupid=Long.parseLong(request.getParameter("rulegroupid"));
	RuleGroup ruleGroup = new RuleGroup();
	ruleGroup.connection = connection;
	ruleGroup.id = rulegroupid;
	ruleGroup.load();
	context.put("rulegroup",ruleGroup);
	
	rulesubgroupid=Long.parseLong(request.getParameter("rulesubgroupid"));
	RuleSubgroup ruleSubgroup = new RuleSubgroup();
	ruleSubgroup.connection = connection;
	ruleSubgroup.id = rulesubgroupid;
	ruleSubgroup.load();
	context.put("rulesubgroup",ruleSubgroup);
	
	id=Long.parseLong(request.getParameter("id"));
	
	mode=request.getParameter("mode");
	context.put("mode",mode);
	if(mode!=null && !mode.equals("add"))
	{
		Rule rule = new Rule();
		rule.connection = connection;
		rule.id=id;
		rule.load();
		context.put("rule",rule);
	}
	else
	{
		Rule rule = new Rule();
		if(id>0)
		{
			rule.connection = connection;
			rule.id=id;
			rule.load();
			rule.id=0;
		}
		context.put("rule",rule);
	}
	
	if(project.transformationFilename!=null && project.transformationStepname!=null)
	{
		String filename = uploadstransformationspath +"/" + project.id + "/" + project.transformationFilename;
		
		PDITransformation trans = new PDITransformation(filename);
		List fields = trans.getRuleEngineStepFields(project.transformationStepname);
		context.put("fields",fields);
		templatename="edittransformationrule.vm";
	}
	else
	{
		templatename="editrule.vm";
	
	}
	
	ArrayList checks = DbCollections.getAllChecks(connection);
	context.put("checks",checks);
	
	ArrayList types = DbCollections.getAllTypes(connection);
	context.put("types",types);

}