import java.io.*;
import com.datamelt.db.Project;
import com.datamelt.db.Rule;
import com.datamelt.db.RuleGroup;
import com.datamelt.db.RuleSubgroup;
import com.datamelt.db.RuleGroupAction;
import com.datamelt.util.PDITransformation;

writeaction="true";
if(user==null)
{
	templatename="login.vm";
}
else
{
	Project project = new Project();
	project.connection = connection;
	project.id = Long.parseLong(request.getParameter("projectid"));;
	project.load();
	context.put("project",project);
	
	RuleGroup ruleGroup = new RuleGroup();
	ruleGroup.connection = connection;
	ruleGroup.id = Long.parseLong(request.getParameter("rulegroupid"));
	ruleGroup.load();
	context.put("rulegroup",ruleGroup);
	
	mode=request.getParameter("mode");
	context.put("mode",mode);
	if(mode!=null && !mode.equals("add"))
	{
		RuleGroupAction action = new RuleGroupAction();
		action.connection = connection;
		action.id = Long.parseLong(request.getParameter("id"));
		action.load();
		context.put("action",action);
	}
	else
	{
		RuleGroupAction action = new RuleGroupAction();
		action.connection = connection;
		action.id = Long.parseLong(request.getParameter("id"));
		action.load();
		action.id=0;
		context.put("action",action);
	}
	
	if(project.transformationFilename!=null && project.transformationStepname!=null)
	{
		String filename = uploadstransformationspath +"/" + project.id + "/" + project.transformationFilename;
		List fields;
		try
		{
			PDITransformation trans = new PDITransformation(filename);
			fields = trans.getRuleEngineStepFields(project.transformationStepname);
		}
		catch(Exception ex)
		{
			// the transformation does not exist anymore
			// or it could not be loaded
			infomessage.type="error";
			infomessage.text="the transformation: " + filename + " does not exit or can not be loaded";
		}
		if(fields!=null && fields.size()>0)
		{
			context.put("fields",fields);
			templatename="edittransformationaction.vm";
		}
		else
		{
			templatename="editaction.vm";
		}
	}
	else
	{
		templatename="editaction.vm";
	
	}
	ArrayList actions = DbCollections.getAllActions(connection);
	context.put("actions",actions);
	
	ArrayList types = DbCollections.getAllTypes(connection);
	context.put("types",types);
	
}