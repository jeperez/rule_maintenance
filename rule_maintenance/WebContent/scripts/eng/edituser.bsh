import com.datamelt.db.User;
import com.datamelt.db.Activity;
import com.datamelt.db.DbCollections;
import com.datamelt.util.PasswordUtility;
 
adminaction="true";
if(user==null)
{
	templatename="login.vm";
}
else
{
	cancelled= request.getParameter("submit");
	
	if(cancelled.equals("save"))
	{
		id=Long.parseLong(request.getParameter("id"));
		name=request.getParameter("name");
		userid=request.getParameter("userid");
		String[] groups = request.getParameterValues("groups");
	
		User dbUser = new User();
		dbUser.setConnection(connection);
		if(id>0)
		{
			dbUser.setId(id);
			dbUser.load();
			if((dbUser.userid.equals(userid) ||(!dbUser.userid.equals(userid)&& !dbUser.exist(userid))) && userid.length()>0 && name.length()>0 )
			{
				dbUser.setName(name);
				dbUser.setUserid(userid);
				dbUser.deleteAllGroupMemberships(connection.getPreparedStatement(User.DELETE_ALL_GROUP_MEMBERSHIPS), user);
				if(groups!=null)
				{
					for(int i=0;i<groups.length;i++)
					{
						long groupId = Long.parseLong(groups[i]);
						dbUser.addGroupMembership(connection.getPreparedStatement(User.ADD_GROUP_MEMBERSHIP),groupId, user);
					}
				}
				dbUser.loadGroups();
				dbUser.update(connection.getPreparedStatement(User.UPDATE_SQL), user);
				context.put("mode","updated");
				infomessage.text="User updated.";
			}
			else if(!dbUser.userid.equals(userid)&& dbUser.exist(userid) && userid.length()>0)
			{
				dbUser.setName(name);
				dbUser.setUserid(userid);
				infomessage.type="error";
				infomessage.text="User already exists.";
			}
			else
			{
				dbUser.setName(name);
				dbUser.setUserid(userid);
				infomessage.type="error";
				infomessage.text="Userid and name must be specified.";
			}
		}
		else
		{
			if(!dbUser.exist(userid) && userid.length()>0 && name.length()>0)
			{
				dbUser.setName(name);
				dbUser.setUserid(userid);
				
				String password=PasswordUtility.generateRandomPassword();
				dbUser.insert(connection.getPreparedStatement(User.INSERT_SQL),password, user);
				context.put("mode","inserted");
				if(groups!=null)
				{
					for(int i=0;i<groups.length;i++)
					{
						long groupId = Long.parseLong(groups[i]);
						dbUser.addGroupMembership(connection.getPreparedStatement(User.ADD_GROUP_MEMBERSHIP),groupId, user);
					}
				}
				dbUser.loadGroups();
				infomessage.text="User added. Password: " + password;
				
				Activity activity = new Activity();
				activity.connection = connection;
				activity.user = user;
				activity.message = "Added user [" + name +"], userid [" + userid +"]";
				activity.insert(connection.getPreparedStatement(Activity.INSERT_SQL));
			}
			else if(dbUser.exist(userid)&& userid.length()>0)
			{
				dbUser.setName(name);
				dbUser.setUserid(userid);
				infomessage.type="error";
				infomessage.text="User already exists.";
			}
			else
			{
				dbUser.setName(name); 
				dbUser.setUserid(userid);
				infomessage.type="error";
				infomessage.text="Userid and name must be specified.";
			}
		}
		dbUser.load();
		context.put("dbuser",dbUser);
		
		ArrayList allgroups = DbCollections.getAllGroups(connection,user);
		context.put("groups",allgroups);
		
		templatename="edituser.vm";
	}
	else
	{
		ArrayList list = DbCollections.getAllUsers(connection);
		context.put("users",list);
		templatename="listusers.vm";
	}
	

}